server.port=8080

mybatis.config-location= classpath:META-INF/mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:META-INF/mybatis/mapper/**/*.xml

spring.application.name=sharding-jdbc-master-slave
spring.main.allow-bean-definition-overriding=true


#配置日志
logging.level.root = info
logging.level.org.springframework.web=info
logging.level.com.liuli.boot.sharding=debug
logging.level.druid.sql=debug


#定义分片规则配置
##定义数据源
spring.shardingsphere.datasource.names=m0,s0
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://192.168.126.131:3306/db_user
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456

spring.shardingsphere.datasource.s0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.s0.url=jdbc:mysql://192.168.126.131:3307/db_user
spring.shardingsphere.datasource.s0.username=root
spring.shardingsphere.datasource.s0.password=123456


#定义主从数据库,其中ds0是主从数据库的逻辑名
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=m0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names = s0


#指定t_user表的数据分布情况，固定分配到ds0的t_user表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds0.t_user


#指定t_user的主键生成策略（SNOWFLAKE）和主键列
spring.shardingsphere.sharding.tables.t_user.key-generator.column=f_id
#SnowflakeShardingKeyGenerator类中指定雪花算法名称SNOWFLAKE
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

#打开sql输出
spring.shardingsphere.props.sql.show = true
